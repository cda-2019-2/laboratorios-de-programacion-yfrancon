#! /usr/local/bin/python3
r"""Test cases
>>> run_answer()
  K0  K1     c12  c13         c14   c15   c16
0  A  20  938.16  300  2016-09-12  0.19  BECB
1  C  15  370.58  900  2016-10-01  0.11  GCDD
2  E  22  118.77  900  2016-10-29  0.32  GEFE
3  B  12  999.72  800  2016-11-09  0.26  FCGD
4  E  14  832.44  800  2016-11-22  0.39  EGFD

"""
import doctest
import subprocess

def run_answer():
    '''Codigo especifico para ejecutar la respuesta'''
    #----------------------------------------------------------------------------------------------
    # Prepara los datos para evaluar la tarea
    #----------------------------------------------------------------------------------------------
    import sqlite3
    conn = sqlite3.connect(':memory:')
    cur = conn.cursor()
    sqlcmd = """
        CREATE TABLE tbl (
            K0  CHAR(1),
            K1  INT,
            c12 FLOAT,
            c13 INT,
            c14 DATE,
            c15 FLOAT,
            c16 CHAR(4)
            );"""
    cur.execute(sqlcmd).fetchall()

    ## Carga los datos y los inserta en la tabla
    text = open('data.csv', 'rt', encoding='utf-8').readlines()
    text = [line[:-1] if line[-1] == '\n' else line for line in text]
    text = [line.split(',') for line in text]
    text = [tuple(line) for line in text]
    cur.executemany('INSERT INTO tbl VALUES (?,?,?,?,?,?,?)', text)

    #----------------------------------------------------------------------------------------------
    # Ejecuta el cÃ³digo del estudiante
    #----------------------------------------------------------------------------------------------
    import pandas as pd
    answer = open('question.sql', 'rt', encoding='utf-8').readlines()
    answer = [row for row in  answer if len(row) >= 2 and row[0:2] != '--']
    answer = ''.join(answer)
    if answer.strip() == '':
        return None
    else:
        return pd.read_sql_query(answer, conn)

#--------------------------------------------------------------------------------------------------
# Grader (generic)
#--------------------------------------------------------------------------------------------------
subprocess.run(['rm', '-f', '_SUCCESS']) # borra el flag de exito de la corrida
RESULT = doctest.testmod()               # ejecuta el doctest
FAIL, _ = RESULT                         # fail, total
if FAIL == 0:                            # grading
    open('_SUCCESS', 'a').close()        #
else:
    print('\n')
#--------------------------------------------------------------------------------------------------
